@model Parcial2_Parqueadero.Models.Vehicle

@{
    ViewBag.Title = "Create";
}

<h2>Registrar Vehículo</h2>


<form id="RequestForm">
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <p>Debes buscar un conductor por medio de su Identificación antes de registrar el vehículo.</p>
        <p>Si no encuentras el conductor, tienes que registrarlo.</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.DriverId, "Identificación de Conductor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="display: flex; flex-direction: row">
                @Html.EditorFor(model => model.DriverId, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "driverIdInput", @style = "margin-right: 5px;" } })
                @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "text-danger" })
                <button id="btnSearchDriver" class="btn" style="margin-right: 5px;">Buscar</button>
                <button id="btnCreateDriver" class="btn">Registrar Conductor</button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Placa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Placa, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Placa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Tipo, ViewBag.tipoVehiculo as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" id="btnSubmitForm" />
            </div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
    $(document).ready(function () {
    if ($("#driverIdInput").val() == "") {
        $(':input[type="submit"]').prop('disabled', true);
    }
    })

    $("#btnSearchDriver").click(e => {
        e.preventDefault();
        let driverIdVal = $("#driverIdInput").val();

        if (driverIdVal == "") {
            swal("Error", "Campo requerido, por favor digita la información.", "error");
        } else {
            $.ajax({
                type: 'post',
                url: '@Url.Action("SearchDriver", "Vehicle")',
                data: { driverId: driverIdVal },
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                dataType: "json",
                success: function (data) {
                    if (data.error == 1) {
                        swal(data.mensaje, "Nombre del conductor: " + data.nombre, "success");
                        $(':input[type="submit"]').prop('disabled', false);
                    }
                    else if (data.error == 2) {
                        swal(data.mensaje, "Vuelva a intentar o registrelo.", "error");
                        $("#driverIdInput").val("")
                    }
                    else if (data.error == 3) {
                        swal(data.mensaje, "Ya valiste:(", "error");
                    }
                }
            });
        }
    });

    $("#btnCreateDriver").click(e => {
    window.location.href = '@Url.Action("Create", "Driver")';
    });

    $("#RequestForm").submit(function (e) {
        e.preventDefault();
        var vardata = $('#RequestForm').serialize();
        $.ajax({
            type: 'post',
            url: '@Url.Action("Create", "Vehicle")',
            data: vardata,
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            dataType: "json",
            success: function (data) {
                if (data.error == 1) {
                    swal(data.mensaje, "Registro grabado", "success", { buttons: false });
                    setTimeout(() => {
                        window.location.href = '@Url.Action("Index", "Home")';
                    }, 2000)
                }
                else if (data.error == 2) {
                    swal(data.mensaje, "Registro NO grabado.", "error");
                }
            }
        });
    });

</script>
}
